{"version":3,"sources":["components/InputBox.jsx","components/OutputBox.jsx","App.js","index.js"],"names":["InputBox","props","currencyData","convert","handleCurrencyChange","amount","setAmount","style","display","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","width","overflow","TextField","id","label","color","size","type","value","onChange","e","target","marginTop","fontSize","Select","defaultValue","length","map","curr","MenuItem","code","OutputBox","convertedAmount","toCurrency","App","useState","setCurrencyData","setToCurrency","setConvertedAmount","useEffect","localStorage","getItem","currentDate","Date","now","moment","isBefore","fetch","then","response","json","data","setItem","JSON","stringify","parse","filteredData","forEach","Cur_Abbreviation","Cur_OfficialRate","Cur_Scale","push","rate","scale","filterData","className","class","val","amountToConvert","find","toFixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab7805e2.chunk.js","sourcesContent":["import { TextField, Select, MenuItem } from '@material-ui/core';\n\nfunction InputBox(props) {\n    const {\n        currencyData,\n        convert,\n        handleCurrencyChange,\n        amount,\n        setAmount\n    } = props;\n\n    const inputBoxStyles = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px',\n        width: '100%',\n        overflow: 'scroll',\n    };\n\n    const arrowStyles = {\n        marginTop: '15px',\n        fontSize: '1.5rem',\n    };\n\n    const selectStyles = {\n        marginTop: '15px',\n    };\n\n    return (\n        <div>\n            <div style={inputBoxStyles}>\n                <TextField id=\"filled-basic\"\n                           label=\"BYN\"\n                           color=\"primary\"\n                           size=\"medium\"\n                           type=\"text\"\n                           value={amount}\n                           onChange={ e => {\n                               setAmount(+e.target.value)\n                               convert(+e.target.value)\n                           } }\n                />\n                <span style={arrowStyles}>â†’</span>\n                <Select\n                    style={selectStyles}\n                    defaultValue={'USD'}\n                    onChange={ e => {\n                            handleCurrencyChange(e.target.value)\n                        }\n                    }\n                >\n                    {currencyData && currencyData.length !== 0 ?\n                        currencyData.map(curr => (\n                            <MenuItem\n                                key={curr.code}\n                                value={curr.code}\n                            >{curr.code}\n                            </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </Select>\n            </div>\n        </div>\n    )\n}\n\nexport default InputBox;\n","function OutputBox(props) {\n\n    const outputBoxStyles = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        marginTop: '25px',\n        overflow: 'scroll',\n    };\n\n    const outputTextStyles = {\n        fontSize: '3rem',\n    }\n\n    const {\n        convertedAmount,\n        toCurrency,\n    } = props;\n\n    return (\n        <div style={outputBoxStyles}>\n            <span style={outputTextStyles}>{ convertedAmount } { toCurrency }</span>\n        </div>\n    )\n}\n\nexport default OutputBox;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport './App.css';\n\nimport InputBox from \"./components/InputBox\";\nimport OutputBox from \"./components/OutputBox\";\n\nconst URL = 'https://www.nbrb.by/api/exrates/rates?periodicity=0';\n\nfunction App() {\n\n    let [currencyData, setCurrencyData] = useState([]);\n    let [toCurrency, setToCurrency] = useState('USD');\n    let [amount, setAmount] = useState('');\n    let [convertedAmount, setConvertedAmount] = useState(0);\n\n    useEffect(() => {\n\n        if (localStorage.getItem('currency')) {\n            const currentDate = new Date(Date.now())\n\n            if (moment().isBefore(currentDate, 'day') === false) {\n                return\n            }\n        }\n\n        fetch(URL)\n            .then(response => response.json())\n            .then(data => localStorage.setItem('currency', JSON.stringify(data)))\n    }, []);\n\n    function filterData() {\n        let data\n        if (JSON.parse(localStorage.getItem('currency'))) {\n            data = JSON.parse(localStorage.getItem('currency'))\n        } else {\n            return\n        }\n\n        let filteredData = []\n\n        data.forEach((curr) => {\n            if (curr.Cur_Abbreviation === 'USD'\n                ||\n                curr.Cur_Abbreviation === 'EUR'\n                ||\n                curr.Cur_Abbreviation === 'RUB') {\n\n                let { Cur_Abbreviation, Cur_OfficialRate, Cur_Scale } = curr\n\n                filteredData.push(\n                    {\n                        code: Cur_Abbreviation,\n                        rate: Cur_OfficialRate,\n                        scale: Cur_Scale,\n                    }\n                )\n            }\n        })\n        return filteredData\n    }\n\n    useEffect(() => {\n        setCurrencyData(filterData())\n    }, [])\n\n    const handleCurrencyChange = val => {\n        setToCurrency(val)\n        setAmount('')\n        setConvertedAmount(0)\n    }\n\n    function convert(amountToConvert = amount) {\n        let curr = currencyData.find(curr => curr.code === toCurrency)\n        const convertedAmount = (amountToConvert * curr.scale * curr.rate).toFixed(2)\n        setConvertedAmount(+convertedAmount)\n    }\n\n    return (\n        <div className=\"wrap\">\n            <h1 style={{color: '#877e87'}}>Currency Converter</h1>\n            <div className=\"App\">\n                <InputBox\n                    class={'upper'}\n                    currencyData={ currencyData }\n                    setToCurrency={ setToCurrency }\n                    amount={amount}\n                    setAmount={setAmount}\n                    handleCurrencyChange={ handleCurrencyChange }\n                    convert={ convert }\n                />\n                <OutputBox\n                    convertedAmount={ convertedAmount }\n                    toCurrency={ toCurrency }\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}